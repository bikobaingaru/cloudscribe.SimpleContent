@model cloudscribe.SimpleContent.Web.ViewModels.PageViewModel
@using cloudscribe.SimpleContent.Models
@using cloudscribe.SimpleContent.Web.Design
@using cloudscribe.SimpleContent.Web
@using cloudscribe.Web.Navigation;
@using cloudscribe.SimpleContent.Web.TagHelpers
@using Microsoft.Extensions.Options
@using Microsoft.Extensions.Localization
@using System.Linq
@{

}
@section Meta {
    @{await Html.RenderPartialAsync("MetaPartial", Model); }
}
@section Styles {
    @{await Html.RenderPartialAsync("StylePartial", Model); }
    @if (Model.CurrentPage != null)
    {
        <environment names="Development">
            @foreach (var c in Model.CurrentPage.Resources.Where(x => x.Type == "css" && (x.Environment == "dev" || x.Environment == "any")).OrderBy(x => x.Sort).ThenBy(x => x.Url).ToList())
            {
                <link rel="stylesheet" href="@Url.Content(c.Url)" asp-append-version="@(c.Url.StartsWith("/"))" />
            }

        </environment>
        <environment names="Staging,Production">
            @foreach (var c in Model.CurrentPage.Resources.Where(x => x.Type == "css" && (x.Environment == "prod" || x.Environment == "any")).OrderBy(x => x.Sort).ThenBy(x => x.Url).ToList())
            {
                <link rel="stylesheet" href="@Url.Content(c.Url)" asp-append-version="@(c.Url.StartsWith("/"))" />
            }
        </environment>
    }
    @if (Model.Template != null)
    {
        <environment names="Development">
            @foreach (var c in Model.Template.RenderCss.Where(x => (x.Environment == "dev" || x.Environment == "any")).OrderBy(x => x.Sort).ThenBy(x => x.Url).ToList())
            {
                <link rel="stylesheet" href="@Url.Content(c.Url)" asp-append-version="@(c.Url.StartsWith("/"))" />
            }
        </environment>
        <environment names="Staging,Production">
            @foreach (var c in Model.Template.RenderCss.Where(x => (x.Environment == "prod" || x.Environment == "any")).OrderBy(x => x.Sort).ThenBy(x => x.Url).ToList())
            {
                <link rel="stylesheet" href="@Url.Content(c.Url)" asp-append-version="@(c.Url.StartsWith("/"))" />
            }
        </environment>
    }
}
@section Toolbar {
    @if (Model.CanEdit)
    {
        await Html.RenderPartialAsync("ToolsPartial", Model);
    }
}
@{await Html.RenderPartialAsync("PageDetailPartial", Model); }
@if (Model.ProjectSettings.ShowRecentPostsOnDefaultPage && Model.CurrentPage != null && Model.CurrentPage.Slug == Model.ProjectSettings.DefaultPageSlug)
{
    @await Component.InvokeAsync("RecentPosts", new { viewName = "RecentPosts", numberToShow = 3 })
}
@if (Model.ProjectSettings.ShowFeaturedPostsOnDefaultPage && Model.CurrentPage != null && Model.CurrentPage.Slug == Model.ProjectSettings.DefaultPageSlug)
{
    @await Component.InvokeAsync("FeaturedPosts", new { viewName = "FeaturedPosts", numberToShow = 3 })
}
@section Scripts {
    @if (Model.CurrentPage != null)
    {
        <environment names="Development">
            @foreach (var c in Model.CurrentPage.Resources.Where(x => x.Type == "js" && (x.Environment == "dev" || x.Environment == "any")).OrderBy(x => x.Sort).ThenBy(x => x.Url).ToList())
            {
                <script src="@Url.Content(c.Url)" asp-append-version="@(c.Url.StartsWith("/"))"></script>
            }
        </environment>
        <environment names="Staging,Production">
            @foreach (var c in Model.CurrentPage.Resources.Where(x => x.Type == "js" && (x.Environment == "prod" || x.Environment == "any")).OrderBy(x => x.Sort).ThenBy(x => x.Url).ToList())
            {
                <script src="@Url.Content(c.Url)" asp-append-version="@(c.Url.StartsWith("/"))"></script>
            }
        </environment>
    }
    @{await Html.RenderPartialAsync("PageScriptsPartial", Model); }
    @if (Model.Template != null)
    {
        <environment names="Development">
            @foreach (var c in Model.Template.RenderScripts.Where(x => (x.Environment == "dev" || x.Environment == "any")).OrderBy(x => x.Sort).ThenBy(x => x.Url).ToList())
            {
                <script src="@Url.Content(c.Url)" asp-append-version="@(c.Url.StartsWith("/"))"></script>
            }
        </environment>
        <environment names="Staging,Production">
            @foreach (var c in Model.Template.RenderScripts.Where(x => (x.Environment == "prod" || x.Environment == "any")).OrderBy(x => x.Sort).ThenBy(x => x.Url).ToList())
            {
                <script src="@Url.Content(c.Url)" asp-append-version="@(c.Url.StartsWith("/"))"></script>
            }
        </environment>
    }
}
